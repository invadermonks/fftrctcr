name: Build, Deploy, and Release

on:
  workflow_dispatch:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Echo Git Context
        run: |
          echo "event_name: ${{ github.event_name }}"
          echo "ref: ${{ github.ref }}"
          echo "ref_name: ${{ github.ref_name }}"
          echo "base_ref: ${{ github.base_ref }}"
          echo "head_ref: ${{ github.head_ref }}"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Extract version number
        id: extract_version
        run: |
          VERSION=$(grep -oP "VERSION = '\K[0-9.]+[a-z]?" randomizer.py)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build with PyInstaller
        run: pyinstaller randomizer.spec

      - name: Package into a 7z file
        run: |
          mkdir -p deploy/package
          cp -r dist/fftrctcr.exe custom/ deploy/package/
          cd deploy
          7z a -t7z -mx=9 -ms=on fftrctcr_v${{ env.VERSION }}.7z package/*

      - name: Create/Update Release
        if: always()
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: deploy/fftrctcr_v${{ env.VERSION }}.7z
          release_name: "FINAL FANTASY TACTICS Rumble: Chaos: >>The Crashdown<< REMAKE ${{ env.VERSION }}"
          prerelease: false
          tag: v${{ env.VERSION }}
          overwrite: true
          body: "fftrctcr version {{ env.VERSION }}"
